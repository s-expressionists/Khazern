
The LOOP module provides a portable implementation of the LOOP
macro as described in the Common Lisp HyperSpec.

This implementation does not use any iteration construct.  Depending
on the use case for this module, using iteration constructs to
implement LOOP may or may not be a problem.

If this module is used as part of a new implementation (the TARGET) to
be bootstrapped from an existing conforming Common Lisp implementation
(the HOST), then any iteration construct could be used, including
LOOP, simply because the host implementation of these constructs would
be used to cross-compile target files using LOOP.

On the other hand, if this module is to be added to an existing Common
Lisp implementation, perhaps in order to obtain a better
implementation of LOOP, or perhaps because it is a partial
implementation that does not yet have a LOOP macro, then it is
important that this module not use LOOP itself.  We decide to go one
step further by also not using any other iteration constructs, so that
those iteration constructs could be implemented by using the
definition of LOOP in this module.

